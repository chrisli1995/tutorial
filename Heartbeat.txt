Heartbeat作用：
通过Heartbeat可以讲资源从一台已经故障的计算机快速转移到另一台正常运转的机器上继续提供服务，一般称之为高可用服务。
相似于keepalived，但在业务的应用上是有区别的。
官方网址：http://linux-ha.org/wiki/Main_Page

Heartbeat的工作原理
设置主从服务器，从服务器可以叫热备服务器，在该服务器中可以配置Heartbeat守护程序来监听主服务器的心跳消息（检测故障以及是否替换）。
同时也可以均为主服务器，只要一方没有接受到心跳报文，则运行正常的主机就会启动自身资源管理模块接管（一般是需要5-20秒）。
与keepalive一样，heartbeat高可用是服务器级别的，不是服务级别的（一般只有服务器宕机，或者是heartbeat出现故障，亦或是心跳连接线故障） 

Heartbeat裂脑
两台高可用服务器都无法检测到对方的心跳，都取得了资源及服务的所有权，但此时两台服务器都活着，导致同一个IP或服务在启动时发生冲突，用户写入数据的时候
会写入不同的服务器，导致服务器两端数据不一致或数据丢失。
导致发现的原因：
1、心跳链路故障（心跳线坏了、网卡或者相关驱动坏了、IP配置冲突、心跳间连接的设备故障，比如网卡和交换机、仲裁的机器出问题）
2、开启的防火墙阻挡了心跳消息传输
3、其他服务配置不当，如心跳方式不同、心跳广播冲突和软件bug等
防止的“秘籍”：
1、同时使用串行电缆和以太电缆连接。
2、检测到裂脑的时候强行关闭一个心跳节点（需要设备支持，如stonith、fence），当程序上备节点发现心跳故障的时候，发送关机命令到主节点。
3、做好对裂脑的监控报警，问题发生时人为介入仲裁。（百度监控有上行和下行，和人工交互的过程）
4、启用磁盘。
5、报警报在服务器接管之前，给人员处理留足够时间。（接管的时间较长，数据不会丢，但导致用户无法写数据）
6、报警后，不直接自动服务接管，而是由人为人员控制接管。
7、增加仲裁机制，当心跳线完全的断开的时候，各自ping参考IP，能够ping通的一端接管服务，或者第三方仲裁软件。

Heartbeat消息类型
1、心跳消息
控制心跳频率及出现故障要等待多久进行故障转换。
2、集群转换消息
当主服务器恢复的时候，通过ip-request消息要求备机释放主服务器失败时备服务器取得的资源。
在备服务器释放资源之后，通过ip-request-resp消息通知主服务器他不在拥有该资源及服务，接受后，主服务器开始正常的服务访问
重传消息
rexmit-request控制重传心跳请求

Heartbeat IP地址接管和故障转移
Heartbeat是通过IP地址接管和ARP广播进行故障转移的，保证接管资源的服务器不是原来宕机的主服务器、

VIP/IP 别名/辅助 IP
真实IP，又被称为管理IP，一般是配置在物理网卡上面的实际IP，不对外提供服务
VIP是虚拟IP，实际上就是Heartbeat临时绑定在物理网卡上的别名IP
手工配置VIP的方法
ifconfig eth0:1 124.42.61.106 netmask 255.255.255.224 up(ip alias)
ip addr add 10.0.15.1/24 broadcast 10.0.15.255 dev eth1(辅助IP)
IP add可以查看包括别名和辅助IP，用ifconfig无法查看辅助IP的配置情况。
删除VIP方法
ip addr del 10.0.15.1/24 broadcast 10.0.15.255 dev eth1(辅助IP)
ifconfig eth0:1 124.42.61.109 netmask 255.255.255.224 down(ip alias)
ifconfig eth0:1 down(ip alias)

Heartbeat脚本默认目录
启动脚本:/etc/init.d/
资源目录:/etc/ha.d/resource.d/
Heartbeat配置文件
Heartbeat默认配置文件路径为/etc/ha.d，Heartbeat常用的配置文件有三个：ha.cf、authkey、haresource
ha.cf:Heartbeat参数配置文件，主要是一些基本参数
authkey:Heartbeat认证文件，高可用服务器之间根据对端的authkey，对对端进行认证
haresource:Heartbeat资源配置文件，如配置IP资源及脚本程序等

具体实现步骤
1、配置网卡（测试需要双网卡）

2、配置主机名
hostname data-1-1 
sed -i 's#HOSTNAME=moban#HOSTNAME=data-1-1#g' /etc/sysconfig/network另一台可以叫data-1-2

3、配置host
cp /etc/hosts /etc/hosts.bak001 备份（复制）hosts文件
sed -i '/^192.168.149/d' /etc/hosts 把原来的文件删掉
[root@data-1-1 etc]# cat >>/etc/hosts<<eof
> 192.168.149.130 data-1-1
> 192.168.149.133 data-1-2
> eof

4、配置心跳连接
添加路由：
data-1-1：
route add -host 192.168.149.134 dev eth1  从data -1-1上访问192.168.149.134，走eth1网卡出去，即使用心跳线路
data-1-2同理
添加完以后可以查看route -n
设置为自启动
echo '/sbin/route add -host 192.168.149.132 dev eth1'>>/etc/rc.local   rc.local是给用户自定义启动时需要执行的文件。
以上就是基本的配置，下面就是开始配置heartbeat

建一个专门的tools文件夹  mkdir /home/tools -p
安装epel包（因为yum安装没有heartbeat）
wget http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm
rpm -ivh epel-release-7-11.noarch.rpm
rpm -qa |grep epel 查看rpm文件
可以查看下是否有heartbeat yum search heartbeat
安装heartbeat yum intall heartbeat* -y

发现这样做 yum中依然没有heartbeat 只存在heartbeat中的一个组件Resource Agents
采用源码将Reusable-Cluster-Components-glue和HeartBeat安装在系统上，当然相应的文件路径会有不同
拷贝三个配置文件
mkdir /usr/local/heartbeat/etc/ha.d -p 把配置文件放这里面
# cp  /usr/local/heartbeat/share/doc/heartbeat/ha.cf  /usr/local/heartbeat/etc/ha.d
# cp /usr/local/heartbeat/share/doc/heartbeat/authkeys /usr/local/heartbeat/etc/ha.d
# cp  /usr/local/heartbeat/share/doc/heartbeat/haresources /usr/local/heartbeat/etc/ha.d
三个配置文件的基本参数（ha.cf、authkey、haresource）在印象笔记中有
对三个文件进行配置
ha.cf
#start
debugfile /var/log/ha-debug
logfile /var/log/ha-log
logfacility local1

keepalive 2
deadtime 30
warntime 10
initdead 60

#bcast eth1
mcast eth0 225.0.0.130 694 1 0

auto_failback on
node data-1-1
node data-1-2
crm no
#end 

authkey
auth 1
1 sha1 47e9336850f1db6fa58bc470bc9b7810eb397f04 

haresources
data-1-1 IPaddr::192.268.149.17/24/eth0
data-1-2 IPaddr::192.168.149.18/24/eth0

启动heartbeat 
cp /etc/ha.d/shellfuncs /usr/local/heartbeat/etc/ha.d 安装完成后文件不在init.d中
/etc/init.d/heartbeat start或者service heartbeat start/status




































